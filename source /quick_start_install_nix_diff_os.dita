<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="task_gyc_bst_4q">
    <title>Installing Agents with Different OS and Architecture than the Puppet Master</title>
    <shortdesc>If your Puppet master OS and architecture are different from the agent, follow this
        example.</shortdesc>
    <taskbody>
        <prereq>This task assumes you've  and have the Puppet master, the PE console, and PuppetDB
            up and running on one node. If you have not already done this, refer to the <xref
                href="quick_start_install_mono.dita#task_xwm_nl4_4q"/></prereq>
        <context>
            <p>This example describes adding an agent node running Debian 6 on AMD64 hardware. You
                can select a different architecture for your agent if you prefer.</p>
            <p>To install an agent with a different OS from the Puppet master, you first add the
                appropriate class for the repo that contains the agent packages, you classify the PE
                Master node group with that class, and then run a curl command from the agent to the
                master to retrieve the necessary packages to install the agent.</p>
        </context>
        <steps>
            <step>
                <cmd>From the console, click <b>Classification</b> in the top navigation bar.<image
                        id="image_wfp_rtt_4q"/></cmd>
            </step>
            <step>
                <cmd>From the  <b>Classification</b> page, click the <b>PE Master</b> group.</cmd>
            </step>
            <step>
                <cmd>Click the <b>Classes</b> tab.</cmd>
            </step>
            <step>
                <cmd>In the <b>Add new class</b>field, in the <b>Class name</b> box, begin typing
                        <q>pe_repo,</q> and select the class
                        <codeph>pe_repo::platform::debian_6_amd64</codeph>, or whichever class you
                    want, from the list of classes.<image id="image_mml_r5t_4q"/></cmd>
                <info><b>Note: </b>The repo classes are listed as
                        <codeph>pe_repo::platform::&lt;agent_os_version_architecture></codeph>.</info>
            </step>
            <step>
                <cmd>Click <b>Add class</b>.</cmd>
            </step>
            <step>
                <cmd>Click the <b>Commit changes</b>button.</cmd>
            </step>
            <step>
                <cmd>Click <b>Live Management</b>, and click <b>Control Puppet</b>.</cmd>
            </step>
            <step>
                <cmd>Click <b>runonce</b> and then click <b>Run</b>. This configures the Puppet
                    master node using the newly-assigned class.</cmd>
                <stepresult>The new repo is created in <codeph>/opt/puppet/packages/public</codeph>.
                    It’s called
                        <codeph>puppet-enterprise-3.7.0-&lt;os-version-architecture>-agent</codeph>.</stepresult>
            </step>
            <step>
                <cmd>SSH into the Debian node where you want to install the agent, and run
                        <codeph>curl -k
                        https://&lt;master.example.com>:8140/packages/current/install.bash | sudo
                        bash</codeph>.</cmd>
                <info><b>Note</b>: <ul id="ul_djg_tvt_4q">
                        <li>You can replace <codeph>current</codeph> in the script with a specific
                            PE version number, in the form of  <codeph>3.x.x</codeph>.</li>
                        <li>Depending on your platform, the method for downloading the script may
                            vary.</li>
                    </ul></info>
                <stepresult>The installer installs and configures the Puppet Enterprise
                    agent.</stepresult>
            </step>
        </steps>
        <postreq>After installation is complete, you need to approve your new agent node’s
            certificate request in the console. </postreq>
    </taskbody>
    <related-links>
        <link href="quick_start_sign_cert.dita#task_fqd_pwt_4q"/>
    </related-links>
</task>
